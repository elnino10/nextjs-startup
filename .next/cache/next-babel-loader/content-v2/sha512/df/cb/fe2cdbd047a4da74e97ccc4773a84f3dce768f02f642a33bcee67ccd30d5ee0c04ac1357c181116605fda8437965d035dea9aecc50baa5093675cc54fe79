{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new-projects\\\\nextjs-startup\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport { Fragment } from \"react\";\nimport Head from \"next/head\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Welcome to \".concat(props.meetups.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"A single meetup\",\n        description: props.meetups.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      title: props.meetups.title,\n      image: props.meetups.image,\n      address: props.meetups.address,\n      description: props.meetups.description,\n      id: props.meetups.id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/new-projects/nextjs-startup/pages/[meetupId]/index.js"],"names":["Fragment","Head","MeetupDetail","MeetupDetails","props","meetups","title","description","image","address","id"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAGA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,8BACE;AAAA,uCAAsBA,KAAK,CAACC,OAAN,CAAcC,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE;AAAM,QAAA,IAAI,EAAC,iBAAX;AAA6B,QAAA,WAAW,EAAEF,KAAK,CAACC,OAAN,CAAcE;AAAxD;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAKE,QAAC,YAAD;AACE,MAAA,KAAK,EAAEH,KAAK,CAACC,OAAN,CAAcC,KADvB;AAEE,MAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAcG,KAFvB;AAGE,MAAA,OAAO,EAAEJ,KAAK,CAACC,OAAN,CAAcI,OAHzB;AAIE,MAAA,WAAW,EAAEL,KAAK,CAACC,OAAN,CAAcE,WAJ7B;AAKE,MAAA,EAAE,EAAEH,KAAK,CAACC,OAAN,CAAcK;AALpB;AAAA;AAAA;AAAA;AAAA,aALF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAeD,CAhBD;;KAAMP,a;;AAkEN,eAAeA,aAAf","sourcesContent":["import { Fragment } from \"react\";\r\nimport Head from \"next/head\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>{`Welcome to ${props.meetups.title}`}</title>\r\n        <meta name=\"A single meetup\" description={props.meetups.description} />\r\n      </Head>\r\n      <MeetupDetail\r\n        title={props.meetups.title}\r\n        image={props.meetups.image}\r\n        address={props.meetups.address}\r\n        description={props.meetups.description}\r\n        id={props.meetups.id}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  // connect mongodb via MongoClient to store data on DB\r\n  const client = await MongoClient.connect(process.env.MONGODB_URI);\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  // find array of all the objects from DB\r\n  const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data from API\r\n  console.log(process.env.MONGODB_URI);\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  // connect mongodb via MongoClient to store data on DB\r\n  const client = await MongoClient.connect(process.env.MONGODB_URI);\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  // find object from DB\r\n  const selectedMeetup = await meetupCollection.findOne({\r\n    _id: new ObjectId(meetupId),\r\n  });\r\n\r\n  return {\r\n    props: {\r\n      meetups: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        image: selectedMeetup.image,\r\n        address: selectedMeetup.address,\r\n        description: selectedMeetup.description,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}
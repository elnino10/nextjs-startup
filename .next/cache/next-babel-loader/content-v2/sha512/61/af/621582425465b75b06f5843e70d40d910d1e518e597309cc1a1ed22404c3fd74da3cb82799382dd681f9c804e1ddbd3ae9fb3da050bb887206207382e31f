{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new-projects\\\\nextjs-startup\\\\pages\\\\index.js\";\nimport { MongoClient } from \"mongodb\";\nimport { Fragment } from \"react\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Tech Meetups List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticProps() {\n  // fetch data from API (preferrably, we just execute the mongodb query here )\n  // connect mongodb via MongoClient to store data on DB\n  const client = await MongoClient.connect(process.env.MONGODB_URI);\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\"); // find the array of all the data in collection\n\n  const resultMeetups = await meetupCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: resultMeetups.map(meetup => ({\n        title: meetup.title,\n        image: meetup.image,\n        address: meetup.address,\n        description: meetup.description,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["C:/Users/USER/Desktop/new-projects/nextjs-startup/pages/index.js"],"names":["MongoClient","Fragment","MeetupList","HomePage","props","meetups","getStaticProps","client","connect","process","env","MONGODB_URI","db","meetupCollection","collection","resultMeetups","find","toArray","close","map","meetup","title","image","address","description","id","_id","toString","revalidate"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,sBACE,QAAC,QAAD;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;AAWA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AAEA;AACA,QAAMC,MAAM,GAAG,MAAMP,WAAW,CAACQ,OAAZ,CAAoBC,OAAO,CAACC,GAAR,CAAYC,WAAhC,CAArB;AACA,QAAMC,EAAE,GAAGL,MAAM,CAACK,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB,CANqC,CAQrC;;AACA,QAAMC,aAAa,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,GAAwBC,OAAxB,EAA5B;AAEAV,EAAAA,MAAM,CAACW,KAAP;AAEA,SAAO;AACLd,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEU,aAAa,CAACI,GAAd,CAAmBC,MAAD,KAAa;AACtCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADwB;AAEtCC,QAAAA,KAAK,EAAEF,MAAM,CAACE,KAFwB;AAGtCC,QAAAA,OAAO,EAAEH,MAAM,CAACG,OAHsB;AAItCC,QAAAA,WAAW,EAAEJ,MAAM,CAACI,WAJkB;AAKtCC,QAAAA,EAAE,EAAEL,MAAM,CAACM,GAAP,CAAWC,QAAX;AALkC,OAAb,CAAlB;AADJ,KADF;AAULC,IAAAA,UAAU,EAAE;AAVP,GAAP;AAYD;AAED,eAAezB,QAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\r\nimport { Fragment } from \"react\";\r\nimport MeetupList from \"../components/meetups/MeetupList\";\r\n\r\nconst HomePage = (props) => {\r\n  return (\r\n    <Fragment>\r\n      <Head>\r\n        <title>Tech Meetups List</title>\r\n      </Head>\r\n      <MeetupList meetups={props.meetups} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport async function getStaticProps() {\r\n  // fetch data from API (preferrably, we just execute the mongodb query here )\r\n\r\n  // connect mongodb via MongoClient to store data on DB\r\n  const client = await MongoClient.connect(process.env.MONGODB_URI);\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  // find the array of all the data in collection\r\n  const resultMeetups = await meetupCollection.find().toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    props: {\r\n      meetups: resultMeetups.map((meetup) => ({\r\n        title: meetup.title,\r\n        image: meetup.image,\r\n        address: meetup.address,\r\n        description: meetup.description,\r\n        id: meetup._id.toString(),\r\n      })),\r\n    },\r\n    revalidate: 1,\r\n  };\r\n}\r\n\r\nexport default HomePage;\r\n"]},"metadata":{},"sourceType":"module"}
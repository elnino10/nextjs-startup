{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new-projects\\\\nextjs-startup\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.meetups.title,\n    image: props.meetups.image,\n    address: props.meetups.address,\n    description: props.meetups.description,\n    id: props.meetups.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\nexport async function getStaticPaths() {\n  // connect mongodb via MongoClient to store data on DB\n  const client = await MongoClient.connect(\"mongodb+srv://joe:YmvB1ytGykhuFmM2@cluster0.lsur2ve.mongodb.net/meetup?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\"); // find array of all the objects from DB\n\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  // fetch data from API\n  const meetupId = context.params.meetupId; // connect mongodb via MongoClient to store data on DB\n\n  const client = await MongoClient.connect(\"mongodb+srv://joe:YmvB1ytGykhuFmM2@cluster0.lsur2ve.mongodb.net/meetup?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupCollection = db.collection(\"meetups\"); // find object from DB\n\n  const selectedMeetup = await meetupCollection.findOne({\n    _id: meetupId\n  });\n  return {\n    props: {\n      meetups: {\n        id: meetupId,\n        title: \"First meetup\",\n        image: \"https://images.pexels.com/photos/586687/pexels-photo-586687.jpeg\",\n        description: \"This is the first meetup\"\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/USER/Desktop/new-projects/nextjs-startup/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetail","MeetupDetails","props","meetups","title","image","address","description","id","getStaticPaths","client","connect","db","meetupCollection","collection","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,OAAOC,YAAP,MAAyB,uCAAzB;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,OAAN,CAAcC,KADvB;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAcE,KAFvB;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,OAAN,CAAcG,OAHzB;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,OAAN,CAAcI,WAJ7B;AAKE,IAAA,EAAE,EAAEL,KAAK,CAACC,OAAN,CAAcK;AALpB;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAVD;;AAYA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,oGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB,CANqC,CAQrC;;AACA,QAAMX,OAAO,GAAG,MAAMU,gBAAgB,CAACE,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AAEAP,EAAAA,MAAM,CAACQ,KAAP;AAEA,SAAO;AACLC,IAAAA,QAAQ,EAAE,KADL;AAELC,IAAAA,KAAK,EAAEjB,OAAO,CAACkB,GAAR,CAAaC,MAAD,KAAa;AAC9BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADsB,KAAb,CAAZ;AAFF,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AAEA,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAH4C,CAK5C;;AACA,QAAMd,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACnB,oGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAzB,CAV4C,CAY5C;;AACA,QAAMc,cAAc,GAAG,MAAMf,gBAAgB,CAACgB,OAAjB,CAAyB;AAACb,IAAAA,GAAG,EAAEQ;AAAN,GAAzB,CAA7B;AAEA,SAAO;AACLtB,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE;AACPK,QAAAA,EAAE,EAAEgB,QADG;AAEPpB,QAAAA,KAAK,EAAE,cAFA;AAGPC,QAAAA,KAAK,EACH,kEAJK;AAKPE,QAAAA,WAAW,EAAE;AALN;AADJ;AADF,GAAP;AAWD;AAED,eAAeN,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      title={props.meetups.title}\r\n      image={props.meetups.image}\r\n      address={props.meetups.address}\r\n      description={props.meetups.description}\r\n      id={props.meetups.id}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  // connect mongodb via MongoClient to store data on DB\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://joe:YmvB1ytGykhuFmM2@cluster0.lsur2ve.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  // find array of all the objects from DB\r\n  const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data from API\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  // connect mongodb via MongoClient to store data on DB\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://joe:YmvB1ytGykhuFmM2@cluster0.lsur2ve.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  // find object from DB\r\n  const selectedMeetup = await meetupCollection.findOne({_id: meetupId});\r\n\r\n  return {\r\n    props: {\r\n      meetups: {\r\n        id: meetupId,\r\n        title: \"First meetup\",\r\n        image:\r\n          \"https://images.pexels.com/photos/586687/pexels-photo-586687.jpeg\",\r\n        description: \"This is the first meetup\",\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}
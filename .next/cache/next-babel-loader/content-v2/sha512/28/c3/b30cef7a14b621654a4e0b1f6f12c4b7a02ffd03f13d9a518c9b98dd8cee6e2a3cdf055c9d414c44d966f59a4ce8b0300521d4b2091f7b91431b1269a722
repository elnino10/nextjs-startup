{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\new-projects\\\\nextjs-startup\\\\pages\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    title: props.meetups.title,\n    image: props.meetups.image,\n    address: props.meetups.address,\n    description: props.meetups.description,\n    id: props.meetups.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/USER/Desktop/new-projects/nextjs-startup/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetups","title","image","address","description","id"],"mappings":";;;;;AAEA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,OAAN,CAAcC,KADvB;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,OAAN,CAAcE,KAFvB;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,OAAN,CAAcG,OAHzB;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,OAAN,CAAcI,WAJ7B;AAKE,IAAA,EAAE,EAAEL,KAAK,CAACC,OAAN,CAAcK;AALpB;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAVD;;KAAMP,a;;AAyDN,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nimport MeetupDetail from \"../../components/meetups/MeetupDetail\";\r\n\r\nconst MeetupDetails = (props) => {\r\n  return (\r\n    <MeetupDetail\r\n      title={props.meetups.title}\r\n      image={props.meetups.image}\r\n      address={props.meetups.address}\r\n      description={props.meetups.description}\r\n      id={props.meetups.id}\r\n    />\r\n  );\r\n};\r\n\r\nexport async function getStaticPaths() {\r\n  // connect mongodb via MongoClient to store data on DB\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://joe:YmvB1ytGykhuFmM2@cluster0.lsur2ve.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  // find array of all the objects from DB\r\n  const meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\r\n\r\n  client.close();\r\n\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  // fetch data from API\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  // connect mongodb via MongoClient to store data on DB\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://joe:YmvB1ytGykhuFmM2@cluster0.lsur2ve.mongodb.net/meetup?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupCollection = db.collection(\"meetups\");\r\n\r\n  // find object from DB\r\n  const selectedMeetup = await meetupCollection.findOne({_id: ObjectId(meetupId)});\r\n\r\n  return {\r\n    props: {\r\n      meetups: {\r\n        id: selectedMeetup._id.toString()\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}